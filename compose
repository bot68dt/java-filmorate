services:
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=filmoratedb
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://dbuser:12345@db:5432/filmoratedb -v ON_ERROR_STOP=1 <<-EOSQL
          CREATE TABLE IF NOT EXISTS raiting (
                id LONG PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                name Varchar NOT NULL
          );

          CREATE TABLE IF NOT EXISTS film (
              id LONG PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
              name Varchar NOT NULL,
              description Varchar NOT NULL,
              releaseDate Date,
              duration INT,
              raiting LONG NOT NULL,
              FOREIGN KEY (raiting) REFERENCES raiting (id)
          );

          CREATE TABLE IF NOT EXISTS genre (
                id LONG PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                name Varchar NOT NULL
          );

          CREATE TABLE IF NOT EXISTS filmGenre (
                filmId LONG GENERATED BY DEFAULT AS IDENTITY,
                genreId LONG NOT NULL,
                FOREIGN KEY (genreId) REFERENCES genre (id),
                FOREIGN KEY (filmId) REFERENCES film (id)
          );

          CREATE TABLE IF NOT EXISTS user (
                id LONG PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
                name Varchar NOT NULL,
                email Varchar NOT NULL,
                login Varchar NOT NULL,
                birthday Date
          );

          CREATE TABLE IF NOT EXISTS friends (
                userId LONG GENERATED BY DEFAULT AS IDENTITY,
                friendId LONG NOT NULL,
                FOREIGN KEY (userId) REFERENCES user (id)
          );

          CREATE TABLE IF NOT EXISTS friendRequest (
                userId LONG GENERATED BY DEFAULT AS IDENTITY,
                friendId LONG NOT NULL,
                accept BOOLEAN,
                FOREIGN KEY (userId) REFERENCES user (id)
          );

          CREATE TABLE IF NOT EXISTS likedUsers (
                filmId LONG GENERATED BY DEFAULT AS IDENTITY,
                userId LONG NOT NULL,
                FOREIGN KEY (filmId) REFERENCES film (id),
                FOREIGN KEY (userId) REFERENCES user (id)
          );

          INSERT INTO raiting (name)
                VALUES
                     ('G'),
                     ('PG'),
                     ('PG-13'),
                     ('R'),
                     ('NC-17');

          INSERT INTO genre (name)
                VALUES
                    ('COMEDY'),
                    ('DRAMA'),
                    ('CARTOON'),
                    ('THRILLER'),
                    ('DOCUMENTARY'),
                    ('ACTION');
        EOSQL